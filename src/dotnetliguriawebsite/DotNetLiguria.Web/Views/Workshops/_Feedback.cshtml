@model DotNetLiguria.Models.WorkshopUndersigned

<link rel="stylesheet" href="~/Content/Unify/plugins/sky-forms-pro/skyforms/css/sky-forms.css">
<link rel="stylesheet" href="~/Content/Unify/plugins/sky-forms-pro/skyforms/custom/custom-sky-forms.css">

@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "1 - Basso",
        Value = "1",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "2 - Basso",
        Value = "2"
    });
    listItems.Add(new SelectListItem
    {
        Text = "3 - Basso",
        Value = "3"
    });
    listItems.Add(new SelectListItem
    {
        Text = "4 - Medio",
        Value = "4"
    });
    listItems.Add(new SelectListItem
    {
        Text = "5 - Medio",
        Value = "5"
    });
    listItems.Add(new SelectListItem
    {
        Text = "6 - Medio",
        Value = "6"
    });
    listItems.Add(new SelectListItem
    {
        Text = "7 - Alto",
        Value = "7"
    });
    listItems.Add(new SelectListItem
    {
        Text = "8 - Alto",
        Value = "8"
    });
    listItems.Add(new SelectListItem
    {
        Text = "9 - Alto",
        Value = "9"
    });
}


@using (Html.BeginForm("AddFeedback", "Workshops", FormMethod.Post, new { @class = "sky-form", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.WorkshopUndersignedId)
    @Html.HiddenFor(model => model.Workshop.WorkshopId)

    <fieldset>
        <section>
            <label class="label">Come valuti la qualità generale dell'evento?</label>
            @Html.DropDownListFor(model => model.Feedback.Vote, listItems)
        </section>
    </fieldset>

    <fieldset>
        <section>
            @if (Model.Workshop != null)
            {
                Model.Feedback = new DotNetLiguria.Models.WorkshopFeedback();
                Model.Feedback.TracksFeedback = new List<DotNetLiguria.Models.TrackFeedBack>();

                for (var i = 0; i < Model.Workshop.Tracks.Count; i++)
                {
                    Model.Feedback.TracksFeedback.Add(new DotNetLiguria.Models.TrackFeedBack());

                    if (Model.Feedback.TracksFeedback[i].WorkshopTrackId == Guid.Empty)
                    {
                        Model.Feedback.TracksFeedback[i].WorkshopTrackId = Model.Workshop.Tracks[i].WorkshopTrackId;
                    }

                    @Html.HiddenFor(model => Model.Feedback.TracksFeedback[i].WorkshopTrackId)

                    <label class="label">@Model.Workshop.Tracks[i].Title</label>
                    var speaker = "";

                    if (@Model.Workshop.Tracks[i].Speakers.Count > 0)
                    {
                        foreach (var item in @Model.Workshop.Tracks[i].Speakers)
                        {
                            speaker += item.Name + ", ";
                        }
                        speaker = speaker.Remove(speaker.Length - 2);
                    }
                    <label class="label">@speaker</label>
                    @Html.DropDownListFor(model => model.Feedback.TracksFeedback[i].Vote, listItems, new { @class = "select" })


                    <hr />
                }
            }
        </section>
    </fieldset>

    <footer>
        <button type="submit" class="btn btn-u">Submit</button>
    </footer>

}

