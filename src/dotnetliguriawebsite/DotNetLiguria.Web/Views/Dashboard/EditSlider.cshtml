@model DotNetLiguria.Models.Slider

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<link rel="stylesheet" href="~/Content/Unify/plugins/layer-slider/layerslider/css/layerslider.css">

<h2>EditSlider</h2>

<div>
    @Html.ActionLink("Back to List", "Slider")
</div>


<div id="layerslider" style="width: 100%; height: 500px; margin: 0px auto;">

        <div class="ls-slide" data-ls="slidedelay:@Model.SlideDelay;@Model.SlideTransitionType.ToString():all">
            <img src="@Model.Image" class="ls-bg" alt="Slide background" />

            @foreach (var obj in Model.SliderOjects)
            {
                if (obj.GetType().BaseType == typeof(DotNetLiguria.Models.ImageSliderObj))
                {
                    var image = (DotNetLiguria.Models.ImageSliderObj)obj;

                    var lnk = string.IsNullOrEmpty(@image.Link) ? "#" : @image.Link;

                    <a href="@lnk" class="ls-l" style="top: @obj.Top; left: @obj.Left;"
                       data-ls="@obj.LayerTransitions">
                        <img src="@image.Image" style="width: @image.Width; height: @image.Height;" alt="Image layer">
                    </a>
                }
                else if (obj.GetType().BaseType == typeof(DotNetLiguria.Models.VideoSliderObj))
                {
                    var video = (DotNetLiguria.Models.VideoSliderObj)obj;
                    switch (video.SlideVideoType)
                    {
                        case DotNetLiguria.Models.Enums.VideoType.youtube:
                            <div class="ls-l" style="top: @obj.Top; left: @obj.Left;"
                                 data-ls="@obj.LayerTransitions">
                                <iframe width="@video.Width" height="@video.Height" src="//www.youtube.com/embed/@video.Source" frameborder="0" allowfullscreen></iframe>
                            </div>
                            break;
                        case DotNetLiguria.Models.Enums.VideoType.vimeo:
                            <div class="ls-l" style="top: @obj.Top; left: @obj.Left;"
                                 data-ls="@obj.LayerTransitions">
                                <iframe src="https://player.vimeo.com/video/@video.Source?autoplay=0" width="@video.Width" height="@video.Height" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
                            </div>
                            break;
                        case DotNetLiguria.Models.Enums.VideoType.html5:
                            <div class="ls-l" style="top: @obj.Top; left: @obj.Left;"
                                 data-ls="@obj.LayerTransitions">
                                <video src="@video.Source" controls></video>
                            </div>
                            break;
                    }
                }
                else if (obj.GetType().BaseType == typeof(DotNetLiguria.Models.CustomHtmlSliderObj))
                {
                    var customHtml = (DotNetLiguria.Models.CustomHtmlSliderObj)obj;
                    <div class="ls-l" style="top: @obj.Top; left: @obj.Left;"
                         data-ls="@obj.LayerTransitions">
                        @Html.Raw(customHtml.InnerHtml)
                    </div>
                }
            }

        </div>   
</div>


@using (Html.BeginForm("EditSlider", "Dashboard", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Slider</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SliderId)


        <div class="form-group">
            <div class="col-md-2">
                <img id="fotoPrev" src="@Model.Image" class="img-thumbnail" />
            </div>
            <div class="col col-md-8">
                <input type="text" id="Image" name="Image" class="form-control" value="@Model.Image">
                <br />
                <span class="btn btn-default btn-file margin-10">
                    <input type="file" id="file" name="file">
                </span>
                <br />
                <label>Immagine dimensione massima (800 KByte)</label>
            </div>
        </div>

        <div class="form-group">
            <label for="Name" class="control-label col-md-2">Title</label>
            <div class="col-md-5">
                <input type="text" id="Title" name="Title" class="form-control" value="@Model.Title" readonly>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SlideDelay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.SlideDelay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SlideDelay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Enable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.CheckBoxFor(model => model.Enable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Enable, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<p>
    <button class="btn btn-success" data-toggle="modal" data-target="#addImageSliderObj">Add Slider Image Obj</button>

    <button class="btn btn-warning" data-toggle="modal" data-target="#addSliderVideoObj">Add Slider Video Obj</button>

    <button class="btn btn-danger" data-toggle="modal" data-target="#addCustomHtmlObj">Add Custom Html Obj</button>

    <button class="btn btn-primary" data-toggle="modal" data-target="#guide">Guide</button>

</p>

<table class="table">
    <tr>
        <th>
            SliderObjType
        </th>
        <th>
            Top
        </th>
        <th>
            Left
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.SliderOjects)
    {
    <tr>
        <td>
            @item.GetType().BaseType.Name
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Top)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Left)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditSliderObj", new { sliderObjId = item.SliderObjBaseId })
        </td>
        <td>
            @Html.ActionLink("Delete", "DeleteSliderObj", new { sliderObjId = item.SliderObjBaseId })
        </td>
    </tr>
    }

</table>

<div class="modal fade" id="addImageSliderObj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                <h4 id="myModalLabel1" class="modal-title">Add Slider Obj</h4>
            </div>
            @Html.Partial("Partial/_AddImageSliderObj", new DotNetLiguria.Models.ImageSliderObj() { SliderObjBaseId = Model.SliderId })
        </div>
    </div>
</div>

<div class="modal fade" id="addSliderVideoObj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                <h4 id="myModalLabel1" class="modal-title">Add Slider Obj</h4>
            </div>
            @Html.Partial("Partial/_AddVideoSliderObj", new DotNetLiguria.Models.VideoSliderObj() { SliderObjBaseId = Model.SliderId })
        </div>
    </div>
</div>

<div class="modal fade" id="addCustomHtmlObj" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                <h4 id="myModalLabel1" class="modal-title">Add Slider Obj</h4>
            </div>
            @Html.Partial("Partial/_AddCustomHtmlSliderObj", new DotNetLiguria.Models.CustomHtmlSliderObj() { SliderObjBaseId = Model.SliderId })
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="guide" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button aria-hidden="true" data-dismiss="modal" class="close" type="button">×</button>
                <h4 id="myModalLabel1" class="modal-title">Guide</h4>
                <h6>http://www.sonoragrill.com.mx/documentation/documentation.html</h6>
            </div>
            @Html.Partial("Partial/_HelpLayer")
        </div>
    </div>
</div>

<script type="text/javascript" src="~/Content/Unify/plugins/layer-slider/layerslider/js/greensock.js"></script>
<script type="text/javascript" src="~/Content/Unify/plugins/layer-slider/layerslider/js/layerslider.transitions.js"></script>
<script type="text/javascript" src="~/Content/Unify/plugins/layer-slider/layerslider/js/layerslider.kreaturamedia.jquery.js"></script>
<script type="text/javascript" src="~/Content/Unify/js/plugins/layer-slider.js"></script>


<script type="text/javascript">

    jQuery(document).ready(function () {
        LayerSlider.initLayerSlider();
    });

    function readURL(input) {

        if (input.files && input.files[0]) {

            var fsize = $('#file')[0].files[0].size;

            if (fsize > 800000) {
                alert("Immagine troppo grande : " + fsize + " Bytes");
                $('#file').val("");
            }
            else {

                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#fotoPrev').attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    }

    $(document).ready(function () {

        $("#file").change(function () {
            readURL(this);
        });

    });

</script>